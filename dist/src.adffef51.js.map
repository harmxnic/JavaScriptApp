{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","block","type","Block","value","options","Error","TitleBlock","tag","TextBlock","ColumnsBlock","html","ImageBlock","is","imageStyles","alt","text","model","background","color","padding","image","display","width","height","Site","selector","$el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","App","site","render","push"],"mappings":"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","file":"src.adffef51.js","sourceRoot":"..\\src","sourcesContent":["export function row(content, styles = '') {\r\n    return `<div class=\"row\" style=\"${styles}\">${content}</div>`\r\n}\r\n\r\nexport function col(content) {\r\n    return `<div class=\"col-sm\">${content}</div>`\r\n}\r\n\r\nexport function css(styles = {}) {\r\n    if (typeof styles === 'string') return styles\r\n    const toString = key => `${key}: ${styles[key]}`\r\n    return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport function block(type) {\r\n    return `\r\n        <form name=\"${type}\">\r\n            <h5>${type}</h5>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-sm\">Добавить</button>\r\n        </form>\r\n        <hr />\r\n    `\r\n}","import {col, css, row} from \"../utils\";\r\n\r\nclass Block {\r\n    constructor(value, options) {\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n\r\n    toHTML() {\r\n        throw new Error('Метод toHTML должен быть реализован')\r\n    }\r\n}\r\n\r\nexport class TitleBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n\r\n    }\r\n\r\n    toHTML() {\r\n        const {tag = 'h1', styles} = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`), css(styles))\r\n    }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        return row(col(`<p>${this.value}</p>`), css(this.options.styles))\r\n    }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const html = this.value.map(col).join('')\r\n        return row(html, css(this.options.styles))\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const {imageStyles: is, alt = '', styles} = this.options\r\n        return row(`<img src=\"${this.value}\" alt=\"${alt}\" style=\"${css(is)}\" />`, css(styles))\r\n    }\r\n}","import image from './assets/image.png'\r\nimport {TextBlock, ColumnsBlock, ImageBlock, TitleBlock} from './classes/blocks'\r\n\r\nconst text = 'Личный проект, созданный на чистом JavaScript'\r\n\r\nexport const model = [\r\n    new TitleBlock('Конструктор сайтов на чистом JavaScript', {tag: 'h2',\r\n        styles: {\r\n            background: 'linear-gradient(to right, #ff0099, #493240)',\r\n            color: '#fff',\r\n            padding: '1.5rem',\r\n            'text-align': 'center'\r\n        }}),\r\n    new TextBlock( text, {styles: {\r\n            background: 'linear-gradient(to left, #f2994a, #f2c94c)',\r\n            padding: '1.5rem',\r\n            'font-weight': 'bold'\r\n        }}),\r\n    new ColumnsBlock(['Приложение на чистом JavaScript, без использования библиотек',\r\n        'Узнал как работают принципы SOLID и ООП в JavaScript за один курс',\r\n        'JavaScript - это просто, интересно.'], {styles: {\r\n            background: 'linear-gradient(to bottom, #8e2de2, #4a00e0)',\r\n            padding: '2rem',\r\n            color: '#fff',\r\n            'font-weight': 'bold'\r\n        }}),\r\n    new ImageBlock(image, {styles: {\r\n            padding: '2rem 0',\r\n            display: 'flex',\r\n            'justify-content': 'center'\r\n        },\r\n        imageStyles: {\r\n            width: '500px',\r\n            height: 'auto'\r\n        },\r\n        alt: 'Это картинка'})\r\n]","export class Site {\r\n    constructor(selector) {\r\n        this.$el = document.querySelector(selector)\r\n    }\r\n\r\n    render(model) {\r\n        this.$el.innerHTML = ''\r\n        model.forEach(block => {\r\n            this.$el.insertAdjacentHTML('beforeend', block.toHTML())\r\n        })\r\n    }\r\n}","import {block} from \"../utils\";\r\nimport {TextBlock, TitleBlock} from \"./blocks\";\r\n\r\nexport class Sidebar {\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.$el.addEventListener('submit', this.add.bind(this))\r\n    }\r\n\r\n    get template() {\r\n        return [\r\n            block('text'),\r\n            block('title')\r\n        ].join('')\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault()\r\n\r\n        const type = event.target.name\r\n        const value = event.target.value.value\r\n        const styles = event.target.styles.value\r\n\r\n        const newBlock = type === 'text'\r\n            ? new TextBlock(value, {styles})\r\n            : new TitleBlock(value, {styles})\r\n\r\n        this.update(newBlock)\r\n\r\n        event.target.value.value = ''\r\n        event.target.styles.value = ''\r\n    }\r\n}","import {Site} from \"./site\";\r\nimport {Sidebar} from \"./sidebar\";\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(this.model)\r\n\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n\r\n        new Sidebar('#pannel', updateCallback)\r\n    }\r\n}","import {model} from './model'\r\nimport './styles/main.css'\r\nimport {App} from \"./classes/app\";\r\n\r\nnew App(model).init()\r\n\r\n\r\n"]}